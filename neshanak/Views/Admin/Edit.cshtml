@model neshanak.viewModel.itemDetailVM

@{
    ViewBag.Title = "createItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{


    <link href="~/Content/indexStyle.css" rel="stylesheet" />
    <link href="~/Extra/leaflet/leaflet.css" rel="stylesheet" />


    <link href="~/Content/slick.css" rel="stylesheet" />
    <link href="~/Content/slick-theme.css" rel="stylesheet" />
    <link href="~/Content/css-circular-prog-bar.css" rel="stylesheet" />

}

@section scripts{

    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin="">
    </script>


    <script src="~/Scripts/editItem.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyDnIMRNDW6W-9c74yyiO_Sp3oeya0hoLwQ"></script>
    <script>
        var mymap;
        var theMarker = {};
        getLocation();
        function showLocation(position) {
            var lat = @Model.lat;
            var lon = @Model.lng;
            mymap = L.map('mapid', { attributionControl: false }).setView([51.505, -0.09], 13);
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: 'pk.eyJ1IjoibWVyaW9saSIsImEiOiJja2p6dXhmdngwYmVvMnZwY2lyc2htNGxhIn0.Y9t__Bll6Fw9b9amb_rcHg',

            }).addTo(mymap);
            mymap.panTo(new L.LatLng(lat, lon));



            theMarker = L.marker([lat, lon]).addTo(mymap);
            mymap.on('click', function (e) {

                lat = e.latlng.lat;
                lon = e.latlng.lng;

                console.log("You clicked the map at LAT: " + lat + " and LONG: " + lon);
                //Clear existing marker,

                if (theMarker != undefined) {
                    mymap.removeLayer(theMarker);
                };

                //Add a marker to show where you clicked.
                theMarker = L.marker([lat, lon]).addTo(mymap);
                $("#lat").val(lat);
                $("#lon").val(lon);
            });
        }
        function errorHandler(err) {
             var lat = @Model.lat;
            var lon = @Model.lng;

             mymap = L.map('mapid', { attributionControl: false }).setView([51.505, -0.09], 13);
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: 'pk.eyJ1IjoibWVyaW9saSIsImEiOiJja2p6dXhmdngwYmVvMnZwY2lyc2htNGxhIn0.Y9t__Bll6Fw9b9amb_rcHg',

            }).addTo(mymap);
            mymap.panTo(new L.LatLng(lat, lon));



            theMarker = L.marker([lat, lon]).addTo(mymap);
            mymap.on('click', function (e) {

                lat = e.latlng.lat;
                lon = e.latlng.lng;

                console.log("You clicked the map at LAT: " + lat + " and LONG: " + lon);
                //Clear existing marker,

                if (theMarker != undefined) {
                    mymap.removeLayer(theMarker);
                };

                //Add a marker to show where you clicked.
                theMarker = L.marker([lat, lon]).addTo(mymap);
                $("#lat").val(lat);
                $("#lng").val(lon);
            });



            if (err.code == 1) {
                //alert("Error: Access is denied!");
            } else if (err.code == 2) {
                //alert("Error: Position is unavailable!");
            }





        }
        function getLocation() {
            if (navigator.geolocation) {
                // timeout at 60000 milliseconds (60 seconds)
                var options = { timeout: 60000 };
                navigator.geolocation.getCurrentPosition
                    (showLocation, errorHandler, options);


            } else {
                alert("Sorry, browser does not support geolocation!");
            }
        }
        $("#mapid").height("250px");
        google.maps.event.addDomListener(window, 'load', function () {
            var places = new google.maps.places.Autocomplete(document.getElementById('address'));
            google.maps.event.addListener(places, 'place_changed', function () {
                var place = places.getPlace();


                if (theMarker != undefined) {
                    mymap.removeLayer(theMarker);
                };
                mymap.panTo(new L.LatLng(place.geometry.location.lat(), place.geometry.location.lng()));
                theMarker = L.marker([place.geometry.location.lat(), place.geometry.location.lng()]).addTo(mymap);
                $("#lat").val(place.geometry.location.lat());
                $("#lng").val(place.geometry.location.lng());
            });
        });
    </script>
    <script>
        if ('@Session["lang"]' == 'fa') {
            $("body").get(0).style.setProperty("--align", "right");
            $("body").get(0).style.setProperty("--direction", "rtl");
        }
        else {
            $("body").get(0).style.setProperty("--align", "left");
            $("body").get(0).style.setProperty("--direction", "ltr");
        }
        $(".creatButt").click(function () {
            $("#createForm").submit();
        });
        var getSubcatTree = function (val, type) {
            if (val != "") {
                var id = val.split('-')[0];
                var isfinal = val.split('-')[1];

                if (isfinal == "0") {
                    id = id + "-" + type
                    $.ajax({
                        url: "/Home/getSubcatJson",
                        dataType: "html",
                        data: {
                            result: id
                        },
                        success: function (data) {

                            if (type == "1") {

                                $("#subcatHolder").html(data);
                            }
                            else {
                                $("#subcatHolder2").html(data);

                            }

                        }
                    })

                }
                else {
                    if (type == "1") {
                        $("#subcat").val("");
                        $("#subcat2").var("");
                        $("#subcat").attr("disabled", "disabled");
                        $("#subcat2").attr("disabled", "disabled");
                    }
                    else {
                        $("#subcat2").var("");
                        $("#subcat2").attr("disabled", "disabled");

                    }
                }
            }
        }
        $("#cat").change(function () {
            getSubcatTree($(this).val(),"1")
        })

        $("#country").change(function () {
            var val = $(this).val();
            $.ajax({
                url: "/Home/getcityPartial",
                dataType: "html",
                data: {
                    result: val
                },
                success: function (data) {
                    $("#cityHolder").html(data);

                }
            })
        })

    </script>
}




<div>
    <main id="loginMain" style="">
        <div class="row  parent">
            <div class="ItemsHome">
                @{
                    int w = Request.Browser.ScreenPixelsWidth;
                    int h = Request.Browser.ScreenPixelsHeight;
                    if (Request.Browser.IsMobileDevice || (w < 720 && h > 720))
                    {

                    }
                    else
                    {


                        <div class="itemRow">
                            <div class="default" style="cursor:pointer;margin-bottom:15px; text-align:center;border:1px dotted #4d4d4d; padding:5px 10px ;border-radius:5px;">@Resources.res.createImage <img style="width:30px; margin : 0 20px" src="~/images/addPic.png" /></div>
                            <div id="imageHolder" style="display:flex">

                                <input multiple type="file" id="imageFileHolder" name="image" required="required" class="form-control " style="display:none">



                                @{
                                    if (Model.img != null && Model.img != "")
                                    {
                                        string[] lst = (Model.img.Trim(',')).Split(',');


                                        foreach (var item in lst)

                                        {
                                            if (item != "")
                                            {
                                                <div class="imageCover">
                                                    <img src="/images/@item" />
                                                    <img id="@item" class="removeImage" src="/images/trash.png" style="position:absolute; bottom:0;top:0;left:0;right:0;margin:auto" /> <i class="fa fa-remove" style="font-size: 12px;position: absolute;bottom: 5px;left: 0px;color: white;"></i>
                                                </div>
                                            }


                                        }
                                    }
                                }
                            </div>


                        </div>


                        <form id="createForm" action="Edit" method="post">
                            <div class="itemRow">
                                @*<p>@Resources.res.link </p>*@

                                <input placeholder="@Resources.res.link" value="@Model.link" id="link" name="link" class="form-control" />
                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.createTitle </p>*@

                                <input placeholder="@Resources.res.createTitle" value="@Model.title" id="title" name="title" class="form-control" />
                            </div>


                            <div class="itemRow">
                                @*<p>@Resources.res.createDesc </p>*@
                                <textarea placeholder="@Resources.res.createDesc" style="height:100px" id="desc" name="desc" class="form-control">@Model.desc</textarea>

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.cat </p>*@
                                @Html.DropDownListFor(x => x.catid, new SelectList(Model.cat, "ID", "title"), Resources.res.chooscat, new { @class = "form-control", id = "cat" })

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.subcat </p>*@
                                <div id="subcatHolder">
                                    @{

                                        if (Model.subcatid == 0)
                                        {

                                            @Html.DropDownList("subcatID", new SelectList(@Model.cat, "id", "title"), Resources.res.choossubcat, new { @class = "form-control", id = "subcat", @disabled = "disable" })

                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(x => x.subcatid, new SelectList(Model.subcat, "ID", "title"), Resources.res.choossubcat, new { @class = "form-control", id = "subcat2" })

                                        }

                                    }

                                </div>

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.subcat2 </p>*@
                                <div id="subcatHolder2">
                                    @{

                                        if (Model.subcatid2 == 0)
                                        {
                                            @Html.DropDownList("subcat2ID", new SelectList(Model.cat.Select(c => new { Id = c.id + "-" + c.catLevel, title = c.title }), "ID", "title"), Resources.res.coosesubcattwo, new { @class = "form-control", id = "subcat2", @disabled = "disable" })

                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(x => x.subcatid2, new SelectList(Model.subcat2, "ID", "title"), Resources.res.coosesubcattwo, new { @class = "form-control", id = "subcat2" })

                                        }

                                    }
                                </div>



                            </div>

                            <div class="itemRow">
                                @*<p>@Resources.res.createPhone </p>*@

                                <input value="@Model.phone1" placeholder="@Resources.res.createPhone " id="phone1" name="phone1" class="form-control" />

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.createPhone </p>*@

                                <input value="@Model.phone2" placeholder="@Resources.res.createPhone" id="phone2" name="phone2" class="form-control" />

                            </div>

                            <div class="itemRow">
                                @*<p>@Resources.res.fax </p>*@
                                <input value="@Model.fax" placeholder="@Resources.res.fax" id="fax" name="fax" class="form-control" />
                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.createPhone2 </p>*@

                                <input value="@Model.mobile1" placeholder="@Resources.res.createPhone2 " id="mobile1" name="mobile1" class="form-control" />

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.createPhone2 </p>*@

                                <input value="@Model.mobile2" placeholder="@Resources.res.createPhone2" id="mobile2" name="mobile2" class="form-control" />

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.email </p>*@
                                <input value="@Model.email" placeholder="@Resources.res.email" id="email" name="email" class="form-control" />
                            </div>


                            <div class="itemRow">
                                @*<p>@Resources.res.website </p>*@
                                <input value="@Model.website" placeholder="@Resources.res.website" id="website" name="website" class="form-control" />
                            </div>
                            @*
        <div class="itemRow">
            <p>@Resources.res.telegram </p>
            <input placeholder="@Resources.res.telegram" id="telegram" name="telegram" class="form-control" />
        </div>
        <div class="itemRow">
            <p>@Resources.res.whatsapp </p>
            <input placeholder="@Resources.res.whatsapp" id="whatsapp" name="whatsapp" class="form-control" />
        </div>*@

                            <div class="itemRow">
                                @*<p>@Resources.res.country </p>*@
                                @Html.DropDownListFor(x => x.country, new SelectList(Model.lands, "ID", "title"), Resources.res.chooseCountry, new { @class = "form-control", id = "country" })


                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.city </p>*@
                                <div id="cityHolder">
                                    @Html.DropDownListFor(x => x.city, new SelectList(Model.cities, "ID", "title"), Resources.res.chooseCity, new { @class = "form-control", id = "city" })

                                </div>

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.instagram </p>*@
                                <input value="@Model.instagram" placeholder="@Resources.res.instagram" id="instagram" name="instagram" class="form-control" />
                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.createAddress </p>*@
                                <textarea placeholder="@Resources.res.createAddress" style="height:100px" id="address" name="address" class="form-control">@Model.address</textarea>

                            </div>
                            <div class="itemRow">
                                @*<p>@Resources.res.createLocation </p>*@
                                <div id="mapid" style=""></div>
                            </div>
                            <input value="@Model.lat" style="display:none" id="lat" name="lat" />
                            <input value="@Model.lng" style="display:none" id="lng" name="lng" />
                            <input hidden value="@Model.id" name="id" />


                            <div class="itemRow " style="border:none">
                                <div class="creatButt btn btn-success">@Resources.res.createButt</div>
                            </div>
                        </form>






                    }



                }

            </div>



        </div>
    </main>
</div>








